diff --git a/cmake/Modules/FindFLAC.cmake b/cmake/Modules/FindFLAC.cmake
index e820cf9..21cbaa8 100644
--- a/cmake/Modules/FindFLAC.cmake
+++ b/cmake/Modules/FindFLAC.cmake
@@ -10,7 +10,7 @@
 find_path(FLAC_INCLUDE_DIR FLAC/all.h)
 find_path(FLAC_INCLUDE_DIR FLAC/stream_decoder.h)

-find_library(FLAC_LIBRARY NAMES FLAC)
+find_library(FLAC_LIBRARY NAMES flac)

 include(FindPackageHandleStandardArgs)
 find_package_handle_standard_args(FLAC DEFAULT_MSG FLAC_LIBRARY FLAC_INCLUDE_DIR)
diff --git a/cmake/Modules/FindFreetype.cmake b/cmake/Modules/FindFreetype.cmake
index 6e3f3f7..0b97e5d 100644
--- a/cmake/Modules/FindFreetype.cmake
+++ b/cmake/Modules/FindFreetype.cmake
@@ -95,6 +95,7 @@ find_library(FREETYPE_LIBRARY
   NAMES
     freetype
     libfreetype
+    freetyped
     freetype219
   HINTS
     ENV FREETYPE_DIR
diff --git a/src/SFML/Audio/CMakeLists.txt b/src/SFML/Audio/CMakeLists.txt
index 420e13b..22cee56 100644
--- a/src/SFML/Audio/CMakeLists.txt
+++ b/src/SFML/Audio/CMakeLists.txt
@@ -79,7 +79,7 @@ sfml_add_library(sfml-audio
                  SOURCES ${SRC} ${CODECS_SRC})

 # setup dependencies
-target_link_libraries(sfml-audio PRIVATE OpenAL)
+target_link_libraries(sfml-audio PRIVATE ${CONAN_LIBS} ${SFML_OSX_FRAMEWORK})

 if(SFML_OS_ANDROID)
     target_link_libraries(sfml-audio PRIVATE android OpenSLES)
diff --git a/src/SFML/Graphics/CMakeLists.txt b/src/SFML/Graphics/CMakeLists.txt
index 883c758..efa2e98 100644
--- a/src/SFML/Graphics/CMakeLists.txt
+++ b/src/SFML/Graphics/CMakeLists.txt
@@ -135,7 +135,7 @@ if(SFML_OS_ANDROID)
 endif()

 sfml_find_package(Freetype INCLUDE "FREETYPE_INCLUDE_DIRS" LINK "FREETYPE_LIBRARY")
-target_link_libraries(sfml-graphics PRIVATE Freetype)
+target_link_libraries(sfml-graphics PRIVATE ${CONAN_LIBS})

 # add preprocessor symbols
 target_compile_definitions(sfml-graphics PRIVATE "STBI_FAILURE_USERMSG")
diff --git a/src/SFML/Window/CMakeLists.txt b/src/SFML/Window/CMakeLists.txt
index 98ea439..4aa3f0f 100644
--- a/src/SFML/Window/CMakeLists.txt
+++ b/src/SFML/Window/CMakeLists.txt
@@ -231,7 +231,7 @@ target_link_libraries(sfml-window PUBLIC sfml-system)

 # When static linking on macOS, we need to add this flag for objective C to work
 if ((NOT BUILD_SHARED_LIBS) AND SFML_OS_MACOSX)
-    target_link_libraries(sfml-window PRIVATE -ObjC)
+    target_compile_options(sfml-window PRIVATE -ObjC)
 endif()

 # find and setup usage for external libraries
